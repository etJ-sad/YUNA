function Show-EventLogTab(){
    
    $eventLogTabItem.Header = "Event Log"
        
    $eventLogDataGrid.VerticalAlignment = "Top"
    
    $eventLogTable.Columns.Add("TimeGenerated")
    $eventLogTable.Columns.Add("EntryType")
    $eventLogTable.Columns.Add("Message")
	$eventLogTable.Columns.Add("Status")
	
	$eventLogValidation = Get-Content ".\_validation\.eventLog.json" -Raw | ConvertFrom-Json

    $events = Get-EventLog -LogName Application -After (Get-Date).AddDays(-7) | Select-Object TimeGenerated, EntryType, Message
    
	foreach ($event in $events) {
		$eventLogTableRow = $eventLogTable.NewRow()
		$eventLogTableRow["TimeGenerated"] = $event.TimeGenerated
		$eventLogTableRow["EntryType"] = $event.EntryType
		$eventLogTableRow["Message"] = $event.Message
		
		if ($eventLogValidation.Critical -contains $event.EntryType.ToString().ToLower()) {
			if (Test-Path ".\_validation\.eventLog.json") { 
				$eventLogTableRow["Status"] = "fail"
				Write-Output "Event Log: => fail: $event.EntryType `nExpected: non of $eventLogValidation.Critical `n" | Out-File .\errors -Append
			} else {
				$eventLogTableRow["Status"] = "missing"
				Write-Output "Event Log: => missing: validation file was not detected: .\_validation\.eventLog.json `n" | Out-File .\errors -Append
			}
		} else {
			$eventLogTableRow["Status"] = "pass"
		}
		$eventLogTable.Rows.Add($eventLogTableRow)
	}

    $eventLogDataGrid.ItemsSource = $eventLogTable.DefaultView
	$eventLogDataGrid.add_AutoGeneratedColumns({
		param($sender, $e)
		if ($sender.Columns.Count -ge 3) {
			$sender.Columns[0].Width = 50
			$sender.Columns[1].Width = 115
			$sender.Columns[2].Width = 75
		}
	})
	
	<#
	$eventLogDataGrid.add_LoadingRow({
        param($sender, $e)
        $row = $e.Row
        $status = $row.DataContext.Status
        if ($status -eq "fail") {
            $row.Background = "Red"
        } elseif ($status -eq "pass") {
            $row.Background = "#FFC4FFA6"
        }
    })
	#>
	
	$eventLogStatusColumn = New-Object Windows.Controls.DataGridTemplateColumn
	$eventLogStatusColumn.Header = "Status"
	$eventLogStatusColumn.CellTemplate = [Windows.Markup.XamlReader]::Parse($cellTemplate)
	$eventLogDataGrid.Columns.Add($eventLogStatusColumn)

    # Append Content
    $eventLogTabItem.Content = $eventLogDataGrid
    $tabControl.Items.Add($eventLogTabItem)
}


function Export-EventLogToJson {
    param(
        [bool]$fullReport = $false
    )

	$eventLogJson = @()
	
	$eventLogTable.Rows | ForEach-Object {

		$eventLogInfo = @{
			"TimeGenerated" = $_["TimeGenerated"]
			"EntryType" = $_["EntryType"]
			"Message" = $_["Message"]
			"Status" = $_["Status"]
		}

		$eventLogJson += $eventLogInfo
	}
	
	$jsonOutput = $eventLogJson | ConvertTo-Json -Depth 2
	$jsonOutput | Out-File -Encoding UTF8 -FilePath ".\output\_eventLog.json"	
}