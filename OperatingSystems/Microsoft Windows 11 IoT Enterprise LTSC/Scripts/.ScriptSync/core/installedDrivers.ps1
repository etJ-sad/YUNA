function Show-InstalledDriversTab() {
    $installedDriversTabItem.Header = "Installed Drivers"

    $installedDriversDataGrid.VerticalAlignment = "Top"

    $installedDriversDataTable.Columns.Add("DeviceName")
    $installedDriversDataTable.Columns.Add("Manufacturer")
    $installedDriversDataTable.Columns.Add("VendorID")
    $installedDriversDataTable.Columns.Add("DeviceID")
    $installedDriversDataTable.Columns.Add("DriverVersion")

    $excludedDevices = @('Generic USB xHCI Host Controller', 
                         'Generic USB4 Device Router', 
                         '(Standard USB Host Controller)', 
                         '(Standard USB HUBs)', 
                         '(Standard keyboards)', 
                         'Standard NVM Express Controller'
                         )

    $drivers = Get-WmiObject -Class Win32_PnPSignedDriver |
        Where-Object {
            $_.DeviceName -ne $null -and
            ($_.DeviceID -match 'VEN_[0-9A-F]{4}' -or $_.DeviceID -match 'VID_[0-9A-F]{4}') -and
            ($_.Manufacturer -ne 'Microsoft' -or ($_.Manufacturer -eq 'Microsoft' -and $_.DeviceName -match 'Realtek')) -and
            $_.Manufacturer -ne '(Standard system devices)' -and
            ($excludedDevices -notcontains $_.Manufacturer)
        } | 
    
	Select-Object DeviceName, Manufacturer, DeviceID, DriverVersion | Sort-Object DeviceName    
    
	foreach ($driver in $drivers) {
        $row = $installedDriversDataTable.NewRow()
        $row["DeviceName"] = $driver.DeviceName
        $row["Manufacturer"] = $driver.Manufacturer
        $row["VendorID"] = $driver.DeviceID.Substring(4, 8)
        $row["DeviceID"] = $driver.DeviceID.Substring(13, 8)
        $row["DriverVersion"] = $driver.DriverVersion
        $installedDriversDataTable.Rows.Add($row)
    }

    # Append Content
    $installedDriversDataGrid.ItemsSource = $installedDriversDataTable.DefaultView
	$installedDriversDataGrid.add_AutoGeneratedColumns({
		param($sender, $e)
		if ($sender.Columns.Count -ge 3) {
			$sender.Columns[0].Width = 400
			$sender.Columns[1].Width = 175
			$sender.Columns[2].Width = 75
			$sender.Columns[3].Width = 75
			$sender.Columns[4].Width = 125
		}
	})
    $installedDriversTabItem.Content = $installedDriversDataGrid
    $tabControl.Items.Add($installedDriversTabItem)
}

function Export-InstalledDriversToJson {
    param(
        [bool]$fullReport = $false
    )

    $installedDriversJsonObject = [ordered]@{}
    
    for ($i = 0; $i -lt $installedDriversDataTable.Rows.Count; $i++) {
        $driverRow = $installedDriversDataTable.Rows[$i]
        $driverProperties = @{
            "DeviceName"     = $driverRow["DeviceName"]
            "Manufacturer"   = $driverRow["Manufacturer"]
            "VendorID"       = $driverRow["VendorID"]
            "DeviceID"       = $driverRow["DeviceID"]
            "DriverVersion"  = $driverRow["DriverVersion"]
        }
        $installedDriversJsonObject["Driver$i"] = $driverProperties
    }
	
	$jsonOutput = $installedDriversJsonObject | ConvertTo-Json -Depth 2
    $jsonOutput | Out-File -Encoding UTF8 .\output\_installedDrivers.json
}

